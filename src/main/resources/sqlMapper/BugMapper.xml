<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cc.cail.bugms.dao.manager.BugMapper" >
  <resultMap id="BaseResultMap" type="cc.cail.bugms.dao.entity.Bug" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="create_id" property="createId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_id" property="updateId" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="bug_title" property="bugTitle" jdbcType="VARCHAR" />
    <result column="bug_desc" property="bugDesc" jdbcType="VARCHAR" />
    <result column="bug_level" property="bugLevel" jdbcType="INTEGER" />
    <result column="assign_id" property="assignId" jdbcType="INTEGER" />
    <result column="assign_time" property="assignTime" jdbcType="TIMESTAMP" />
    <result column="bug_status" property="bugStatus" jdbcType="INTEGER" />
    <result column="bak1" property="bak1" jdbcType="VARCHAR" />
    <result column="bak2" property="bak2" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, create_id, create_time, update_id, update_time, bug_title, bug_desc, bug_level, 
    assign_id, assign_time, bug_status, bak1, bak2
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cc.cail.bugms.dao.entity.BugExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bug
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bug
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bug
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cc.cail.bugms.dao.entity.BugExample" >
    delete from bug
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cc.cail.bugms.dao.entity.Bug" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bug (create_id, create_time, update_id, 
      update_time, bug_title, bug_desc, 
      bug_level, assign_id, assign_time, 
      bug_status, bak1, bak2
      )
    values (#{createId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateId,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{bugTitle,jdbcType=VARCHAR}, #{bugDesc,jdbcType=VARCHAR}, 
      #{bugLevel,jdbcType=INTEGER}, #{assignId,jdbcType=INTEGER}, #{assignTime,jdbcType=TIMESTAMP}, 
      #{bugStatus,jdbcType=INTEGER}, #{bak1,jdbcType=VARCHAR}, #{bak2,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cc.cail.bugms.dao.entity.Bug" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bug
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="createId != null" >
        create_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateId != null" >
        update_id,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="bugTitle != null" >
        bug_title,
      </if>
      <if test="bugDesc != null" >
        bug_desc,
      </if>
      <if test="bugLevel != null" >
        bug_level,
      </if>
      <if test="assignId != null" >
        assign_id,
      </if>
      <if test="assignTime != null" >
        assign_time,
      </if>
      <if test="bugStatus != null" >
        bug_status,
      </if>
      <if test="bak1 != null" >
        bak1,
      </if>
      <if test="bak2 != null" >
        bak2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="createId != null" >
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null" >
        #{updateId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bugTitle != null" >
        #{bugTitle,jdbcType=VARCHAR},
      </if>
      <if test="bugDesc != null" >
        #{bugDesc,jdbcType=VARCHAR},
      </if>
      <if test="bugLevel != null" >
        #{bugLevel,jdbcType=INTEGER},
      </if>
      <if test="assignId != null" >
        #{assignId,jdbcType=INTEGER},
      </if>
      <if test="assignTime != null" >
        #{assignTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bugStatus != null" >
        #{bugStatus,jdbcType=INTEGER},
      </if>
      <if test="bak1 != null" >
        #{bak1,jdbcType=VARCHAR},
      </if>
      <if test="bak2 != null" >
        #{bak2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cc.cail.bugms.dao.entity.BugExample" resultType="java.lang.Integer" >
    select count(*) from bug
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bug
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createId != null" >
        create_id = #{record.createId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateId != null" >
        update_id = #{record.updateId,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bugTitle != null" >
        bug_title = #{record.bugTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.bugDesc != null" >
        bug_desc = #{record.bugDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.bugLevel != null" >
        bug_level = #{record.bugLevel,jdbcType=INTEGER},
      </if>
      <if test="record.assignId != null" >
        assign_id = #{record.assignId,jdbcType=INTEGER},
      </if>
      <if test="record.assignTime != null" >
        assign_time = #{record.assignTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bugStatus != null" >
        bug_status = #{record.bugStatus,jdbcType=INTEGER},
      </if>
      <if test="record.bak1 != null" >
        bak1 = #{record.bak1,jdbcType=VARCHAR},
      </if>
      <if test="record.bak2 != null" >
        bak2 = #{record.bak2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bug
    set id = #{record.id,jdbcType=INTEGER},
      create_id = #{record.createId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_id = #{record.updateId,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      bug_title = #{record.bugTitle,jdbcType=VARCHAR},
      bug_desc = #{record.bugDesc,jdbcType=VARCHAR},
      bug_level = #{record.bugLevel,jdbcType=INTEGER},
      assign_id = #{record.assignId,jdbcType=INTEGER},
      assign_time = #{record.assignTime,jdbcType=TIMESTAMP},
      bug_status = #{record.bugStatus,jdbcType=INTEGER},
      bak1 = #{record.bak1,jdbcType=VARCHAR},
      bak2 = #{record.bak2,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cc.cail.bugms.dao.entity.Bug" >
    update bug
    <set >
      <if test="createId != null" >
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null" >
        update_id = #{updateId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bugTitle != null" >
        bug_title = #{bugTitle,jdbcType=VARCHAR},
      </if>
      <if test="bugDesc != null" >
        bug_desc = #{bugDesc,jdbcType=VARCHAR},
      </if>
      <if test="bugLevel != null" >
        bug_level = #{bugLevel,jdbcType=INTEGER},
      </if>
      <if test="assignId != null" >
        assign_id = #{assignId,jdbcType=INTEGER},
      </if>
      <if test="assignTime != null" >
        assign_time = #{assignTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bugStatus != null" >
        bug_status = #{bugStatus,jdbcType=INTEGER},
      </if>
      <if test="bak1 != null" >
        bak1 = #{bak1,jdbcType=VARCHAR},
      </if>
      <if test="bak2 != null" >
        bak2 = #{bak2,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cc.cail.bugms.dao.entity.Bug" >
    update bug
    set create_id = #{createId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_id = #{updateId,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      bug_title = #{bugTitle,jdbcType=VARCHAR},
      bug_desc = #{bugDesc,jdbcType=VARCHAR},
      bug_level = #{bugLevel,jdbcType=INTEGER},
      assign_id = #{assignId,jdbcType=INTEGER},
      assign_time = #{assignTime,jdbcType=TIMESTAMP},
      bug_status = #{bugStatus,jdbcType=INTEGER},
      bak1 = #{bak1,jdbcType=VARCHAR},
      bak2 = #{bak2,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="listTestersBug" parameterType="java.lang.Integer" resultType="map">
  SELECT
	b.id AS id,
	b.create_time AS createTime,
	u.user_name AS createName,
	u2.user_name AS assignName,
	b.assign_time AS assignTime,
	b.bug_status AS bugStatus,
	b.bug_level AS bugLevel,
	b.bug_desc AS bugDesc
FROM
	bug b,
	user u,
	user u2
WHERE
	b.create_id = u.id
AND b.assign_id = u2.id
AND b.create_id = #{testId,jdbcType=INTEGER}
  </select>
    <select id="listDevBug" parameterType="java.lang.Integer" resultType="map">
  SELECT
	b.id AS id,
	b.create_time AS createTime,
	u.user_name AS createName,
	u2.user_name AS assignName,
	b.assign_time AS assignTime,
	b.bug_status AS bugStatus,
	b.bug_level AS bugLevel,
	b.bug_desc AS bugDesc
FROM
	bug b,
	user u,
	user u2
WHERE
	b.create_id = u.id
AND b.assign_id = u2.id
AND b.assign_id = #{devId,jdbcType=INTEGER}
  </select>
</mapper>